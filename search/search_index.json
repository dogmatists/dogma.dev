{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Dogma Here be dragons This is a semi-public, pre-alpha, work-in-progress project. Caveat utilitor: Assume nothing works, and you may be pleasantly surprised; and when it breaks, you get to keep both pieces. This project is presently at an early design and proof-of-concept stage. It is unlikely to be particularly useful as yet to anyone but its authors. If you are interested in the project, you can keep tabs on development at GitHub and follow the author on Twitter for project announcements. Language Package C C++ Dart Protobuf Python Ruby Zig","title":"Introduction"},{"location":"index.html#dogma","text":"Here be dragons This is a semi-public, pre-alpha, work-in-progress project. Caveat utilitor: Assume nothing works, and you may be pleasantly surprised; and when it breaks, you get to keep both pieces. This project is presently at an early design and proof-of-concept stage. It is unlikely to be particularly useful as yet to anyone but its authors. If you are interested in the project, you can keep tabs on development at GitHub and follow the author on Twitter for project announcements. Language Package C C++ Dart Protobuf Python Ruby Zig","title":"Dogma"},{"location":"Angle.html","text":"Angle class Summary Language Type Symbol C struct Angle C++ struct dogma::Angle Dart class Angle Protobuf message dogma.Angle Python class dogma.Angle Ruby class Dogma::Angle Zig struct dogma.Angle Description Angles are represented using radians , but can be constructed from radians, degrees , or turns . Constants Constructor From degrees Language Type C AngleFromDegrees(180) C++ Angle.from_degrees(180) Dart Angle.fromDegrees(180) Python Angle(degrees=180) Ruby Angle.new(degrees: 180) Zig Angle.fromDegrees(180) From radians Language Type C AngleFromRadians(M_PI) C++ Angle.from_radians(M_PI) Dart Angle.fromRadians(math.pi) Python Angle(radians=math.pi) Ruby Angle.new(radians: Math::PI) Zig Angle.fromRadians(std.math.pi) From turns Language Type C AngleFromTurns(0.5) C++ Angle.from_turns(0.5) Dart Angle.fromTurns(0.5) Python Angle(turns=0.5) Ruby Angle.new(turns: 0.5) Zig Angle.fromTurns(0.5) Properties degrees Language Type C AngleToDegrees(angle) C++ angle.degrees() Dart angle.degrees Python angle.degrees Ruby angle.degrees Zig angle.degrees() radians Language Type C AngleToRadians(angle) C++ angle.radians() Dart angle.radians Python angle.radians Ruby angle.radians Zig angle.radians() turns Language Type C AngleToTurns(angle) C++ angle.turns() Dart angle.turns Python angle.turns Ruby angle.turns Zig angle.turns() Methods","title":"Angle"},{"location":"Angle.html#angle-class","text":"","title":"Angle class"},{"location":"Angle.html#summary","text":"Language Type Symbol C struct Angle C++ struct dogma::Angle Dart class Angle Protobuf message dogma.Angle Python class dogma.Angle Ruby class Dogma::Angle Zig struct dogma.Angle","title":"Summary"},{"location":"Angle.html#description","text":"Angles are represented using radians , but can be constructed from radians, degrees , or turns .","title":"Description"},{"location":"Angle.html#constants","text":"","title":"Constants"},{"location":"Angle.html#constructor","text":"","title":"Constructor"},{"location":"Angle.html#from-degrees","text":"Language Type C AngleFromDegrees(180) C++ Angle.from_degrees(180) Dart Angle.fromDegrees(180) Python Angle(degrees=180) Ruby Angle.new(degrees: 180) Zig Angle.fromDegrees(180)","title":"From degrees"},{"location":"Angle.html#from-radians","text":"Language Type C AngleFromRadians(M_PI) C++ Angle.from_radians(M_PI) Dart Angle.fromRadians(math.pi) Python Angle(radians=math.pi) Ruby Angle.new(radians: Math::PI) Zig Angle.fromRadians(std.math.pi)","title":"From radians"},{"location":"Angle.html#from-turns","text":"Language Type C AngleFromTurns(0.5) C++ Angle.from_turns(0.5) Dart Angle.fromTurns(0.5) Python Angle(turns=0.5) Ruby Angle.new(turns: 0.5) Zig Angle.fromTurns(0.5)","title":"From turns"},{"location":"Angle.html#properties","text":"","title":"Properties"},{"location":"Angle.html#degrees","text":"Language Type C AngleToDegrees(angle) C++ angle.degrees() Dart angle.degrees Python angle.degrees Ruby angle.degrees Zig angle.degrees()","title":"degrees"},{"location":"Angle.html#radians","text":"Language Type C AngleToRadians(angle) C++ angle.radians() Dart angle.radians Python angle.radians Ruby angle.radians Zig angle.radians()","title":"radians"},{"location":"Angle.html#turns","text":"Language Type C AngleToTurns(angle) C++ angle.turns() Dart angle.turns Python angle.turns Ruby angle.turns Zig angle.turns()","title":"turns"},{"location":"Angle.html#methods","text":"","title":"Methods"},{"location":"Latitude.html","text":"Latitude class Summary Language Type Symbol C struct Latitude C++ struct dogma::Latitude Dart class Latitude Protobuf message dogma.Latitude Python class dogma.Latitude Ruby class Dogma::Latitude Zig struct dogma.Latitude Description Constants MAX_DEGREES MIN_DEGREES Constructor Language Type C Latitude(90) C++ Latitude{90} Dart Latitude(90) Python Latitude(90) Ruby Latitude.new(90) Zig Latitude.init(90) Properties Methods","title":"Latitude"},{"location":"Latitude.html#latitude-class","text":"","title":"Latitude class"},{"location":"Latitude.html#summary","text":"Language Type Symbol C struct Latitude C++ struct dogma::Latitude Dart class Latitude Protobuf message dogma.Latitude Python class dogma.Latitude Ruby class Dogma::Latitude Zig struct dogma.Latitude","title":"Summary"},{"location":"Latitude.html#description","text":"","title":"Description"},{"location":"Latitude.html#constants","text":"","title":"Constants"},{"location":"Latitude.html#max_degrees","text":"","title":"MAX_DEGREES"},{"location":"Latitude.html#min_degrees","text":"","title":"MIN_DEGREES"},{"location":"Latitude.html#constructor","text":"Language Type C Latitude(90) C++ Latitude{90} Dart Latitude(90) Python Latitude(90) Ruby Latitude.new(90) Zig Latitude.init(90)","title":"Constructor"},{"location":"Latitude.html#properties","text":"","title":"Properties"},{"location":"Latitude.html#methods","text":"","title":"Methods"},{"location":"Longitude.html","text":"Longitude class Summary Language Type Symbol C struct Longitude C++ struct dogma::Longitude Dart class Longitude Protobuf message dogma.Longitude Python class dogma.Longitude Ruby class Dogma::Longitude Zig struct dogma.Longitude Description Constants MAX_DEGREES MIN_DEGREES Constructor Language Type C Longitude(180) C++ Longitude{180} Dart Longitude(180) Python Longitude(180) Ruby Longitude.new(180) Zig Longitude.init(180) Properties Methods","title":"Longitude"},{"location":"Longitude.html#longitude-class","text":"","title":"Longitude class"},{"location":"Longitude.html#summary","text":"Language Type Symbol C struct Longitude C++ struct dogma::Longitude Dart class Longitude Protobuf message dogma.Longitude Python class dogma.Longitude Ruby class Dogma::Longitude Zig struct dogma.Longitude","title":"Summary"},{"location":"Longitude.html#description","text":"","title":"Description"},{"location":"Longitude.html#constants","text":"","title":"Constants"},{"location":"Longitude.html#max_degrees","text":"","title":"MAX_DEGREES"},{"location":"Longitude.html#min_degrees","text":"","title":"MIN_DEGREES"},{"location":"Longitude.html#constructor","text":"Language Type C Longitude(180) C++ Longitude{180} Dart Longitude(180) Python Longitude(180) Ruby Longitude.new(180) Zig Longitude.init(180)","title":"Constructor"},{"location":"Longitude.html#properties","text":"","title":"Properties"},{"location":"Longitude.html#methods","text":"","title":"Methods"},{"location":"concepts.html","text":"Concepts Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque rhoncus nisl eget urna tempus tincidunt. Vivamus porta interdum elit, dictum bibendum odio. Aliquam rutrum dapibus est, eget facilisis ligula congue vitae. Nulla egestas magna urna, vitae vestibulum metus interdum sit amet. Nulla facilisis urna imperdiet eros suscipit, id pharetra augue pulvinar. Pellentesque vitae libero quis erat convallis hendrerit non eget sapien. Phasellus eu sollicitudin leo. Interdum et malesuada fames ac ante ipsum primis in faucibus. Maecenas iaculis dapibus felis, in varius urna mollis quis. Donec luctus tellus eget augue vulputate, id pellentesque nisi eleifend. Duis pretium augue sed tempor egestas. Donec dignissim neque turpis, ac sagittis neque fermentum vel. Duis cursus commodo ligula id finibus. Nullam ut ultrices neque. Fusce lobortis auctor diam, vitae ultricies dolor bibendum eget. Quisque id sem sagittis, faucibus odio sit amet, dignissim enim. Duis tortor sem, malesuada eu cursus nec, ullamcorper non mi. Morbi sagittis risus sed ligula consectetur, eget vulputate justo gravida. Vivamus ultrices, nunc ut mattis ultrices, enim elit elementum orci, id blandit turpis lorem dictum turpis. Donec sed tincidunt ligula. Nam tincidunt eros non quam rutrum, at feugiat ipsum maximus. Sed scelerisque magna felis, et lobortis massa viverra non.","title":"Concepts"},{"location":"concepts.html#concepts","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque rhoncus nisl eget urna tempus tincidunt. Vivamus porta interdum elit, dictum bibendum odio. Aliquam rutrum dapibus est, eget facilisis ligula congue vitae. Nulla egestas magna urna, vitae vestibulum metus interdum sit amet. Nulla facilisis urna imperdiet eros suscipit, id pharetra augue pulvinar. Pellentesque vitae libero quis erat convallis hendrerit non eget sapien. Phasellus eu sollicitudin leo. Interdum et malesuada fames ac ante ipsum primis in faucibus. Maecenas iaculis dapibus felis, in varius urna mollis quis. Donec luctus tellus eget augue vulputate, id pellentesque nisi eleifend. Duis pretium augue sed tempor egestas. Donec dignissim neque turpis, ac sagittis neque fermentum vel. Duis cursus commodo ligula id finibus. Nullam ut ultrices neque. Fusce lobortis auctor diam, vitae ultricies dolor bibendum eget. Quisque id sem sagittis, faucibus odio sit amet, dignissim enim. Duis tortor sem, malesuada eu cursus nec, ullamcorper non mi. Morbi sagittis risus sed ligula consectetur, eget vulputate justo gravida. Vivamus ultrices, nunc ut mattis ultrices, enim elit elementum orci, id blandit turpis lorem dictum turpis. Donec sed tincidunt ligula. Nam tincidunt eros non quam rutrum, at feugiat ipsum maximus. Sed scelerisque magna felis, et lobortis massa viverra non.","title":"Concepts"},{"location":"faq.html","text":"Frequently Asked Questions","title":"FAQs"},{"location":"faq.html#frequently-asked-questions","text":"","title":"Frequently Asked Questions"},{"location":"glossary.html","text":"Glossary 0-9 A angle B C D degree E F G H I J K L M N O P Q R radian S T turn U V W X Y Z","title":"Glossary"},{"location":"glossary.html#glossary","text":"","title":"Glossary"},{"location":"glossary.html#0-9","text":"","title":"0-9"},{"location":"glossary.html#a","text":"","title":"A"},{"location":"glossary.html#angle","text":"","title":"angle"},{"location":"glossary.html#b","text":"","title":"B"},{"location":"glossary.html#c","text":"","title":"C"},{"location":"glossary.html#d","text":"","title":"D"},{"location":"glossary.html#degree","text":"","title":"degree"},{"location":"glossary.html#e","text":"","title":"E"},{"location":"glossary.html#f","text":"","title":"F"},{"location":"glossary.html#g","text":"","title":"G"},{"location":"glossary.html#h","text":"","title":"H"},{"location":"glossary.html#i","text":"","title":"I"},{"location":"glossary.html#j","text":"","title":"J"},{"location":"glossary.html#k","text":"","title":"K"},{"location":"glossary.html#l","text":"","title":"L"},{"location":"glossary.html#m","text":"","title":"M"},{"location":"glossary.html#n","text":"","title":"N"},{"location":"glossary.html#o","text":"","title":"O"},{"location":"glossary.html#p","text":"","title":"P"},{"location":"glossary.html#q","text":"","title":"Q"},{"location":"glossary.html#r","text":"","title":"R"},{"location":"glossary.html#radian","text":"","title":"radian"},{"location":"glossary.html#s","text":"","title":"S"},{"location":"glossary.html#t","text":"","title":"T"},{"location":"glossary.html#turn","text":"","title":"turn"},{"location":"glossary.html#u","text":"","title":"U"},{"location":"glossary.html#v","text":"","title":"V"},{"location":"glossary.html#w","text":"","title":"W"},{"location":"glossary.html#x","text":"","title":"X"},{"location":"glossary.html#y","text":"","title":"Y"},{"location":"glossary.html#z","text":"","title":"Z"},{"location":"history.html","text":"Release Notes","title":"Release Notes"},{"location":"history.html#release-notes","text":"","title":"Release Notes"},{"location":"install.html","text":"Installation Summary Language Command C git clone https://github.com/dogmatists/dogma.c.git C++ git clone https://github.com/dogmatists/dogma.cpp.git Dart dependencies:\u21b5 dogma: ^0.0.0 Protobuf git clone https://github.com/dogmatists/dogma.pb.git Python pip3 install dogma.py Ruby gem install dogma.rb Zig git clone https://github.com/dogmatists/dogma.zig.git","title":"Installation"},{"location":"install.html#installation","text":"","title":"Installation"},{"location":"install.html#summary","text":"Language Command C git clone https://github.com/dogmatists/dogma.c.git C++ git clone https://github.com/dogmatists/dogma.cpp.git Dart dependencies:\u21b5 dogma: ^0.0.0 Protobuf git clone https://github.com/dogmatists/dogma.pb.git Python pip3 install dogma.py Ruby gem install dogma.rb Zig git clone https://github.com/dogmatists/dogma.zig.git","title":"Summary"},{"location":"learn.html","text":"Tutorials Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque rhoncus nisl eget urna tempus tincidunt. Vivamus porta interdum elit, dictum bibendum odio. Aliquam rutrum dapibus est, eget facilisis ligula congue vitae. Nulla egestas magna urna, vitae vestibulum metus interdum sit amet. Nulla facilisis urna imperdiet eros suscipit, id pharetra augue pulvinar. Pellentesque vitae libero quis erat convallis hendrerit non eget sapien. Phasellus eu sollicitudin leo. Interdum et malesuada fames ac ante ipsum primis in faucibus. Maecenas iaculis dapibus felis, in varius urna mollis quis. Donec luctus tellus eget augue vulputate, id pellentesque nisi eleifend. Duis pretium augue sed tempor egestas. Donec dignissim neque turpis, ac sagittis neque fermentum vel. Duis cursus commodo ligula id finibus. Nullam ut ultrices neque. Fusce lobortis auctor diam, vitae ultricies dolor bibendum eget. Quisque id sem sagittis, faucibus odio sit amet, dignissim enim. Duis tortor sem, malesuada eu cursus nec, ullamcorper non mi. Morbi sagittis risus sed ligula consectetur, eget vulputate justo gravida. Vivamus ultrices, nunc ut mattis ultrices, enim elit elementum orci, id blandit turpis lorem dictum turpis. Donec sed tincidunt ligula. Nam tincidunt eros non quam rutrum, at feugiat ipsum maximus. Sed scelerisque magna felis, et lobortis massa viverra non.","title":"Tutorials"},{"location":"learn.html#tutorials","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque rhoncus nisl eget urna tempus tincidunt. Vivamus porta interdum elit, dictum bibendum odio. Aliquam rutrum dapibus est, eget facilisis ligula congue vitae. Nulla egestas magna urna, vitae vestibulum metus interdum sit amet. Nulla facilisis urna imperdiet eros suscipit, id pharetra augue pulvinar. Pellentesque vitae libero quis erat convallis hendrerit non eget sapien. Phasellus eu sollicitudin leo. Interdum et malesuada fames ac ante ipsum primis in faucibus. Maecenas iaculis dapibus felis, in varius urna mollis quis. Donec luctus tellus eget augue vulputate, id pellentesque nisi eleifend. Duis pretium augue sed tempor egestas. Donec dignissim neque turpis, ac sagittis neque fermentum vel. Duis cursus commodo ligula id finibus. Nullam ut ultrices neque. Fusce lobortis auctor diam, vitae ultricies dolor bibendum eget. Quisque id sem sagittis, faucibus odio sit amet, dignissim enim. Duis tortor sem, malesuada eu cursus nec, ullamcorper non mi. Morbi sagittis risus sed ligula consectetur, eget vulputate justo gravida. Vivamus ultrices, nunc ut mattis ultrices, enim elit elementum orci, id blandit turpis lorem dictum turpis. Donec sed tincidunt ligula. Nam tincidunt eros non quam rutrum, at feugiat ipsum maximus. Sed scelerisque magna felis, et lobortis massa viverra non.","title":"Tutorials"},{"location":"license.html","text":"License The project in its entirety, including all source code as well as this manual, is 100% free and unencumbered public domain software. This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to http://unlicense.org/","title":"License"},{"location":"license.html#license","text":"The project in its entirety, including all source code as well as this manual, is 100% free and unencumbered public domain software. This is free and unencumbered software released into the public domain. Anyone is free to copy, modify, publish, use, compile, sell, or distribute this software, either in source code form or as a compiled binary, for any purpose, commercial or non-commercial, and by any means. In jurisdictions that recognize copyright laws, the author or authors of this software dedicate any and all copyright interest in the software to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this software under copyright law. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. For more information, please refer to http://unlicense.org/","title":"License"},{"location":"start.html","text":"Getting Started Summary Language Code C #include <dogma.h> C++ #include <dogma.hpp> Dart import 'package:dogma/dogma.dart'; Protobuf import \"dogma.proto\"; Python import dogma Ruby require 'dogma' Zig const dogma = @import(\"dogma\");","title":"Getting Started"},{"location":"start.html#getting-started","text":"","title":"Getting Started"},{"location":"start.html#summary","text":"Language Code C #include <dogma.h> C++ #include <dogma.hpp> Dart import 'package:dogma/dogma.dart'; Protobuf import \"dogma.proto\"; Python import dogma Ruby require 'dogma' Zig const dogma = @import(\"dogma\");","title":"Summary"}]}